image: alaxalves/noosfero-ci:stretch

variables:
  RAILS_ENV: test
  SELENIUM_DRIVER: headless_chrome
  POSTGRES_DB: gitlab_ci_test
  POSTGRES_USER: gitlab_ci_runner
  POSTGRES_PASSWORD: ""

services:
  - postgres:9.4

before_script:
  - ./script/silent-quick-start -i
  - mkdir -p tmp/pids tmp/cache cache
  - rm -f vendor/rails
  - cp config/database.yml.gitlab-ci config/database.yml
#  - chromedriver
  - gem install webdrivers
  - firefox --version
  - chrome --version
  - bundle exec rake db:create
  - bundle exec rake db:schema:load
  - bundle exec rake db:migrate

stages:
  # - smoke-tests
  - all-tests
  - code-quality

smoke:
  script: bundle exec rails ci:smoke
  stage: all-tests
  # stage: smoke-tests

.cache: &cache
  cache:
    key: "$CI_BUILD_REF_NAME"
    paths:
      - /usr/share/rubygems-integration/all/

# smoke:
#   script: bundle exec rake ci:smoke
#   stage: smoke-tests

.retriable-template: &retriable
  retry: 2

rspec:
  <<: *retriable
  <<: *cache
  script: bundle exec rails test:specs
  stage: all-tests

api:
  <<: *retriable
  <<: *cache
  script: bundle exec rails test:api
  stage: all-tests

# TODO: Unforce-passing the path to execute rake task
# Later change folder name to models/ and rails invoking to `rails test:models`
units:
  <<: *retriable
  <<: *cache
  script: bundle exec rails test test/unit
  stage: all-tests

# TODO: Unforce-passing the path to execute rake task
# Later change folder name to controllers/ and rails invoking to `rails test:controllers`
functionals:
  <<: *retriable
  <<: *cache
  script: bundle exec rails test test/functional
  stage: all-tests

integration:
  <<: *retriable
  <<: *cache
  script: bundle exec rails test:integration
  stage: all-tests

cucumber-1:
  <<: *retriable
  <<: *cache
  script: SLICE=1/2 bundle exec cucumber --profile default
  stage: all-tests
cucumber-2:
  <<: *retriable
  <<: *cache
  script: SLICE=2/2 bundle exec cucumber --profile default
  stage: all-tests

selenium-1:
  <<: *retriable
  <<: *cache
  script: SLICE=1/120 bundle exec rails selenium
  stage: all-tests
selenium-2:
  <<: *retriable
  script: SLICE=2/6 bundle exec rails selenium
  stage: all-tests
selenium-3:
  <<: *retriable
  <<: *cache
  script: SLICE=3/6 bundle exec rails selenium
  stage: all-tests
selenium-4:
  <<: *retriable
  <<: *cache
  script: SLICE=4/6 bundle exec rails selenium
  stage: all-tests
selenium-5:
  <<: *retriable
  <<: *cache
  script: SLICE=5/6 bundle exec rails selenium
  stage: all-tests
selenium-6:
  <<: *retriable
  <<: *cache
  script: SLICE=6/6 bundle exec rails selenium
  stage: all-tests

# NOOSFERO_BUNDLE_OPTS=install makes migrations fails
# probably because of rubygems-integration
plugins-1:
  <<: *retriable
  <<: *cache
  script: SLICE=1/5 bundle exec rails test:noosfero_plugins NOOSFERO_BUNDLE_OPTS=install
  stage: all-tests
plugins-2:
  <<: *retriable
  <<: *cache
  script: SLICE=2/5 bundle exec rails test:noosfero_plugins NOOSFERO_BUNDLE_OPTS=install
  stage: all-tests
plugins-3:
  <<: *retriable
  <<: *cache
  script: SLICE=3/5 bundle exec rails test:noosfero_plugins NOOSFERO_BUNDLE_OPTS=install
  stage: all-tests
plugins-4:
  <<: *retriable
  <<: *cache
  script: SLICE=4/5 bundle exec rails test:noosfero_plugins NOOSFERO_BUNDLE_OPTS=install
  stage: all-tests
plugins-5:
  <<: *retriable
  <<: *cache
  script: SLICE=5/5 bundle exec rails test:noosfero_plugins NOOSFERO_BUNDLE_OPTS=install
  stage: all-tests

cypress:
  <<: *retriable
  <<: *cache
  script: bundle exec rails cypress:run
  stage: all-tests

rubocop:
  <<: *cache
  script:
    - rubocop
  stage: code-quality
  allow_failure: true

code_quality:
  <<: *retriable
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  before_script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
  script:
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    paths:
      - gl-code-quality-report.json
    reports:
      codequality: gl-code-quality-report.json
  stage: code-quality
  only:
    - tags
